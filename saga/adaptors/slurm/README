Notes:

On Stampede, returning a non-zero exit code results in the scheduler
putting the job into a FAILED state and assigning it an exit code of 127.

EXAMPLE:

js = saga.job.Service("slurm+ssh://stampede")js = saga.job.Service("slurm+ssh://stampede")
jd.executable  = '/bin/exit'
jd.arguments   = ['3']
job = js.create_job(jd)
job.run()

Will return something similar to (personal account information removed):

(saga-python-env)ashleyz@login1:~$ scontrol show job 309684
JobId=309684 Name=SlurmJob
   UserId=_____ GroupId=__________
   Priority=3000 Account=_____ QOS=normal
   JobState=FAILED Reason=NonZeroExitCode Dependency=(null)
   Requeue=0 Restarts=0 BatchFlag=1 ExitCode=127:0
   RunTime=00:00:05 TimeLimit=00:01:00 TimeMin=N/A
   SubmitTime=2013-02-22T20:26:50 EligibleTime=2013-02-22T20:26:50
   StartTime=2013-02-22T20:26:50 EndTime=2013-02-22T20:26:55
   PreemptTime=None SuspendTime=None SecsPreSuspend=0
   Partition=development AllocNode:Sid=login1:12070
   ReqNodeList=(null) ExcNodeList=(null)
   NodeList=c557-401
   BatchHost=c557-401
   NumNodes=1 NumCPUs=16 CPUs/Task=1 ReqS:C:T=*:*:*
   MinCPUsNode=1 MinMemoryNode=0 MinTmpDiskNode=0
   Features=(null) Gres=(null) Reservation=(null)
   Shared=0 Contiguous=0 Licenses=(null) Network=(null)
   Command=/home1/01414/_______/.saga/adaptors/slurm_job/wrapper.sh
   WorkDir=/home1/01414/_______/

I'm not sure how to fix this for the time being.

Suspend/resume do not appear to be supported for regular
users on Stampede.

Cancelling a job with scontrol, puts it into a COMPLETING state, which
is parsed by the SLURM status parser as saga.job.RUNNING (see the
SLURM docs, COMPLETING is a state a job goes into when it is done
running but still flushing IO/etc).  Anyhow, I put some code in to
manually put the job into CANCELED state when the job is canceled,
but I'm not sure that this is reported correctly everywhere yet.

What exit code should be returned for a CANCELED job?